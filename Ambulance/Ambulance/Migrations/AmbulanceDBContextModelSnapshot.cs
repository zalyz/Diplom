// <auto-generated />
using System;
using Ambulance.DBAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Ambulance.Migrations
{
    [DbContext(typeof(AmbulanceDBContext))]
    partial class AmbulanceDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Ambulance.Classes.ChronicPatient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Age")
                        .HasColumnType("float");

                    b.Property<string>("Diagnosis")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FIO")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FlatNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HouseNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Street")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Urgency")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WhoCalled")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ChronicPatients");
                });

            modelBuilder.Entity("Ambulance.Classes.IncidentalCall", b =>
                {
                    b.Property<double>("CallNumber")
                        .HasColumnType("float");

                    b.Property<DateTime>("ArrivalDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CallNotes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CallType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ComeBackDateTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateTimeReception")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DepartureDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Diagnosis")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("KilometrageAfter")
                        .HasColumnType("int");

                    b.Property<int>("KilometrageBefor")
                        .HasColumnType("int");

                    b.Property<int>("PatientId")
                        .HasColumnType("int");

                    b.Property<string>("Place")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("ProcessedCallId")
                        .HasColumnType("bigint");

                    b.Property<string>("ProcessingDispatcher")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Results")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("TransferDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("TransferringDispatcher")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Treatment")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CallNumber");

                    b.HasIndex("PatientId");

                    b.ToTable("IncidentalCalls");
                });

            modelBuilder.Entity("Ambulance.Classes.Patient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Age")
                        .HasColumnType("float");

                    b.Property<string>("FIO")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FlatNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HouseNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Street")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Patients");
                });

            modelBuilder.Entity("Ambulance.Classes.ProcessedCall", b =>
                {
                    b.Property<double>("CallNumber")
                        .HasColumnType("float");

                    b.Property<DateTime>("ArrivalDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CallNotes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CallType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ComeBackDateTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateTimeReception")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DepartureDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Diagnosis")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("KilometrageAfter")
                        .HasColumnType("int");

                    b.Property<int>("KilometrageBefor")
                        .HasColumnType("int");

                    b.Property<int>("PatientId")
                        .HasColumnType("int");

                    b.Property<string>("Place")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProcessingDispatcher")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Results")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("TransferDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("TransferringDispatcher")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Treatment")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CallNumber");

                    b.HasIndex("PatientId");

                    b.ToTable("ProcessedCalls");
                });

            modelBuilder.Entity("Ambulance.Classes.Staff.Dispatcher", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("MiddleName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Dispatchers");
                });

            modelBuilder.Entity("Ambulance.Classes.Staff.Doktor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("MiddleName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Doktors");
                });

            modelBuilder.Entity("Ambulance.Classes.Staff.Driver", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("MiddleName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Drivers");
                });

            modelBuilder.Entity("Ambulance.Classes.Staff.MedicalAssistant", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("MiddleName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("MedicalAssistants");
                });

            modelBuilder.Entity("Ambulance.Classes.Staff.Orderly", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("MiddleName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Orderlies");
                });

            modelBuilder.Entity("Ambulance.Classes.Staff.Statistician", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("MiddleName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Statisticians");
                });

            modelBuilder.Entity("Ambulance.Classes.IncidentalCall", b =>
                {
                    b.HasOne("Ambulance.Classes.Patient", "Patient")
                        .WithMany()
                        .HasForeignKey("PatientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("Ambulance.Classes.AmbulanceBrigade", "AmbulanceBrigade", b1 =>
                        {
                            b1.Property<double>("IncidentalCallCallNumber")
                                .HasColumnType("float");

                            b1.Property<string>("BrigadeType")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Doktor")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Driver")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("MedicalAssistants1")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("MedicalAssistants2")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<long>("Number")
                                .HasColumnType("bigint");

                            b1.Property<string>("Orderly")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("StationName")
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("IncidentalCallCallNumber");

                            b1.ToTable("IncidentalCalls");

                            b1.WithOwner()
                                .HasForeignKey("IncidentalCallCallNumber");
                        });
                });

            modelBuilder.Entity("Ambulance.Classes.ProcessedCall", b =>
                {
                    b.HasOne("Ambulance.Classes.Patient", "Patient")
                        .WithMany()
                        .HasForeignKey("PatientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("Ambulance.Classes.AmbulanceBrigade", "AmbulanceBrigade", b1 =>
                        {
                            b1.Property<double>("ProcessedCallCallNumber")
                                .HasColumnType("float");

                            b1.Property<string>("BrigadeType")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Doktor")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Driver")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("MedicalAssistants1")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("MedicalAssistants2")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<long>("Number")
                                .HasColumnType("bigint");

                            b1.Property<string>("Orderly")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("StationName")
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("ProcessedCallCallNumber");

                            b1.ToTable("ProcessedCalls");

                            b1.WithOwner()
                                .HasForeignKey("ProcessedCallCallNumber");
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
